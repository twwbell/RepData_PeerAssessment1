cr
source('~/Documents/Coursera/corr.R')
cr <- corr("specdata", 400)
cr
source('~/Documents/Coursera/corr.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
length(cr)
cr <- corr("specdata")
summary(cr)
round(summary(cr),4)
round(summary(corr("specdata",400)),4)
round(summary(corr("specdata",150)),4)
source('~/Documents/Coursera/corr.R')
round(summary(corr("specdata",150)),4)
source('~/Documents/Coursera/corr.R')
source('~/Documents/Coursera/corr.R')
round(summary(corr("specdata",400)),4)
source('~/Documents/Coursera/corr.R')
round(summary(corr("specdata",400)),4)
round(head(corr("specdata",400)),4)
head(corr("specdata",400))
options(digits=4)
head(corr("specdata",400))
source('~/Documents/Coursera/corr.R')
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata",332:1)
use <- sample(332,10)
print(cc[use, "nobs"])
cc
?set.seed
cr - corr("specdata")
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr,5)],4)
out <- round(cr[sample(length(cr),5)],4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
n
set.seed(197)
out <- c(n, round(cr[sample(n,5)], 4))
print(out)
cr <- corr("specdata",2000)
cr
n <- length(cr)
n
cr <- corr("specdata",1000)
cr <- sort(cr)
print(c(n, round(cr,4)))
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals,length)
lapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
lm(x-y)
debug(lm)
lm(x-y)
library(datasets)
data("iris")
data(iris)
?iris
iris
lapply(iris, mean)
tapply(iris$Sepal.Length, mean)
?tapply
libary("swirl")
libary(swirl)
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags,unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population)
tapply(flags$population, flags$red, summary)
q
quit()
play()
nxt()
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes, range) -> shape_mat
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6)).
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique) -> unique_vals
unique_vals
lapply(unique_vals, unique)
sapply(unique_vals,lenght)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
q()
test <- matrix(nrow = 1:10, ncol = 1:10)
test
test <- matrix(nrow = 10, ncol = 10)
test
test <- matrix(nrow = 4, ncol = 4)
test
test[,1] <- 1
test
test[,2] <- 2
test[,3] <- 3
test[,4] <- 4
test
solve(test)
c=rbind(c(1, -1/4), c(-1/4, 1))
c
solve(c)
c=rbind(c(3, 3), c(3, 3))
solve(c)
c=rbind(c(1, 3), c(1, 3))
c
c=rbind(c(1, 3), c(3, 1))
c
solve(c)
source('~/Repos/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
source('~/Repos/ProgrammingAssignment2/cachemean.R')
makeVector(1:4)
cachemean(1:4)
cachemean()
cachemean(1)
mean(1:4)
cachemean(1:4)
datasets(iris)
library(datasets)
data("iris")
class(iris)
cachemean(iris)
test.list <- list(1:3, 3:5, 4:7, 5:8)
makeVector(test.list)
cachemean(makeVector(test.list))
a <- makeVector(1:100)
b <- makeVector(1:100)
cachemean(a)
cachemean(a)
cachemean(b)
cachemean(b)
source('~/Repos/ProgrammingAssignment2/cachematrix.R')
source('~/Repos/ProgrammingAssignment2/cachematrix.R')
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
m1
d <- makeCacheMatrix(m1)
cacheSolve(d)
cacheSolve(d)
solve(m1)
?solve
source('~/Repos/ProgrammingAssignment2/cachematrix.R')
d <- makeCacheMatrix(m1)
cacheSolve(m1)
cacheSolve(d)
m1
library(xslx)
library(xlsx)
read.xlsx("course3_wk1_q3.xslx", sheetIndex=1, header=TRUE, colIndex = 7:15, rowIndex = 18:23) -> dat
dat
sum(dat$Zip*dat$Ext,na.rm=T)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
library(XML)
install.packages("XML")
library(XML)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
doc <- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
doc
rootNode <- xmlRoot(doc)
rootNode
names(rootNode)
xmlSApply(rootNode)
xmlSApply(rootNode, summary)
install.packages("XPath")
?xmlSApply
rootNode[[1],[1]]
rootNode[[1][1]]
xmlSApply(rootNode[[2]], xmlName)
doc
rootNode
xmlName(rootNode)
xmlAttrs(rootNode)
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode" == "21231", xmlValue)
xpathSApply(rootNode, "//zipcode" == 21231, xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue)
?xpathSApply
xpathSApply(rootNode, "//zipcode[21231]", xmlValue)
xpathSApply(rootNode, "//zipcode[zipcode=21231]", xmlValue)
filter(xpathSApply(rootNode, "//zipcode", xmlValue), zipcode=="21231")
xpathSApply(rootNode, "//zipcode[zipcode=21231]", xmlValue) == "21231"
nrow(xpathSApply(rootNode, "//zipcode[zipcode=21231]", xmlValue) == "21231")
xpathSApply(rootNode, "//zipcode[zipcode=21231]", xmlValue) -> list
list
xpathSApply(rootNode, "//zipcode", xmlValue) -> list
list
list == "21231"
nrow(list == "21231")
sum(list == "21231")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "course3_wk1_q5.csv", method="curl")
?fread
??fread
install.packages("data.table")
library(data.table)
fread
?fread
fread("course3_wk1_q5.csv")
fread("course3_wk1_q5.csv") -> DT
DT
str(DT)
DT$pwgtp15
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
{rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]}
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
#{rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]}
#system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
race = 1000
data.frame() <- df
data.frame() -> df
mean(DT$pwgtp15,by=DT$SEX)
system.time(replicate(race, mean(DT$pwgtp15,by=DT$SEX)))
#sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(replicate(race, sapply(split(DT$pwgtp15,DT$SEX),mean)))
#tapply(DT$pwgtp15,DT$SEX,mean)
system.time(replicate(race, tapply(DT$pwgtp15,DT$SEX,mean)))
#DT[,mean(pwgtp15),by=SEX]
system.time(replicate(race,DT[,mean(pwgtp15),by=SEX]))
#mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(replicate(race, {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}))
data.frame(user, system, elapsed)
data.frame(row.names = c(user, system, elapsed))
data.frame(row.names = c(user, system, elapsed))
data.frame(user, system, elapsed)
data.frame(user=character(), system, elapsed)
data.frame(user=numeric(), system=numeric(), elapsed=numeric())
quiz5 <- function() {}
df <- data.frame(user=numeric(), system=numeric(), elapsed=numeric())
#mean(DT$pwgtp15,by=DT$SEX)
rbind(df,system.time(replicate(race, mean(DT$pwgtp15,by=DT$SEX))))
#sapply(split(DT$pwgtp15,DT$SEX),mean)
rbind(df,system.time(replicate(race, sapply(split(DT$pwgtp15,DT$SEX),mean))))
#tapply(DT$pwgtp15,DT$SEX,mean)
rbind(df,system.time(replicate(race, tapply(DT$pwgtp15,DT$SEX,mean))))
#DT[,mean(pwgtp15),by=SEX]
rbind(df,system.time(replicate(race,DT[,mean(pwgtp15),by=SEX])))
#mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
rbind(df,system.time(replicate(race, {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
quiz5()
source('~/.active-rstudio-document')
quiz5()
system.time(getwd())
class(system.time(getwd()))
rbind(system.time(getwd()), system.time(version())
)
rbind(system.time(getwd()), system.time(4+4))
source('~/.active-rstudio-document')
quiz5()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
quiz5()
race = 1
quiz5()
race = 1000
quiz5()
quiz5(1)
source('~/.active-rstudio-document')
quiz5(1)
source('~/Documents/Coursera/course3_wk1_q5.R')
quiz5(1)
quiz5(10)
quiz5(100)
dir()
read.csv("course3_wk1_quiz.csv")
read.csv("course3_wk1_quiz.csv") -> df
df$VAL
df$VAL == 24
sum(df$VAL == 24)
filter(df, VAL=24)
filter(df, VAL==24)
filter(df, VAL=="24")
filter(df, df$VAL=="24")
df
select(df, VAL)
library(dplyr)
filter(df, VAL=="24")
nrow(filter(df, VAL=="24"))
quiz5(1000)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
{mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}
mean(DT[DT$SEX==1,]$pwgtp15)
source('~/Documents/Coursera/course3_wk1_q5.R')
quiz5(1000)
address <- "https://s3.amazonaws.com/coursera-uploads/peer-review/944e911d7b7759f4d21041e08fcff360/tidy_data.txt"
address <- sub("^https", "http", address)
data <- read.table(url(address), header = TRUE)
View(data)
address <- "https://s3.amazonaws.com/coursera-uploads/peer-review/a4c1f2ffc34733754cd74a1b62f4474b/tidy_data.txt"
address <- sub("^https", "http", address)
data <- read.table(url(address), header = TRUE)
View(data)
library(swirl)
swirl()
dim(pm0)
head(pm0)
names(cnames)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
pm0$Sample.Value -> x0
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
pm1$Sample.Value -> x1
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative < x1<0
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt$county.site), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd=2)
abline(h = median(x0sub, na.rm = TRUE), lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0 <- (pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- date.frame(state = names(mn0), mean = mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mgr <- merge(d0,d1, set = "state")
mgr <- merge(d0,d1, by = "state")
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(
)
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("/Users/thomasbell/Repos/RepData_PeerAssessment1")
ls()
dir()
read.csv("activity.zip")
?unzip
unzip("activity.zip", list = TRUE)
read.csv(unzip("activity.zip"))
data <- read.csv(unzip("activity.zip"))
data
str(data)
as.Date(data$date)
as.Date(data$date)
mutate
library(dplyr)
data <- mutate(date, date = as.Date(date))
data <- mutate(data, date = as.Date(date))
str(date)
str(data)
